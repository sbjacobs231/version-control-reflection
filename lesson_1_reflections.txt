How did viewing a diff between two versions of a file help you see the bug that was introduced?

Looking at the differences between two files is much faster for fixing bugs than to 
look at every line of code of one file and finding the bug.

How could having easy access to the entire history of a file make you a more efficient programmer
in the long term?

If you make a mistake you can upload the most recent working version of you project.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git,
vs having versions automatically saved, like Google Docs does?

Pros: save at a good stopping point
Cons: Room for human error. One might forget to commit.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

It's faster to save multiple files at the same time and better for organization. Sometimes files work in
conjunction with each other.

How can you use the commands git log and git diff to view the history of files?

Git log shows the developer a history of changes that multiple different developers have made in chronological order.
Git diff shows the differences between a file in different moments of time.

How might using version control make you more confident to make changes that could break something?

I know that I can always go back to a previous working version of my repository.

Now that you have your workspace set up, what do you want to try using Git for?

I want to practice making new branches and commiting them.